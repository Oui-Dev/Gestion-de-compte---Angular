{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/model/model-list-bank\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"../shared/component/table/table.component\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"@angular/material/radio\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/material/divider\";\n\nfunction BankComponent_app_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-table\", 3);\n    i0.ɵɵlistener(\"userSelection\", function BankComponent_app_table_3_Template_app_table_userSelection_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.setButtonState($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", ctx_r0.dataSource)(\"tableColumn\", ctx_r0.modelList);\n  }\n}\n\nfunction BankComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function BankComponent_form_4_Template_form_ngSubmit_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onSubmit($event);\n    });\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵelementStart(2, \"mat-form-field\");\n    i0.ɵɵelementStart(3, \"mat-label\");\n    i0.ɵɵtext(4, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-form-field\");\n    i0.ɵɵelementStart(7, \"mat-label\");\n    i0.ɵɵtext(8, \"Info\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\");\n    i0.ɵɵelementStart(11, \"mat-form-field\");\n    i0.ɵɵelementStart(12, \"mat-label\");\n    i0.ɵɵtext(13, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"mat-select\", 7);\n    i0.ɵɵelementStart(15, \"mat-option\", 8);\n    i0.ɵɵtext(16, \"Cartes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"mat-option\", 9);\n    i0.ɵɵtext(18, \"Ch\\u00E8ques\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"mat-option\", 10);\n    i0.ɵɵtext(20, \"Esp\\u00E8ces\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"mat-form-field\");\n    i0.ɵɵelementStart(22, \"mat-label\");\n    i0.ɵɵtext(23, \"Montant\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\");\n    i0.ɵɵelementStart(26, \"mat-radio-group\", 12);\n    i0.ɵɵelementStart(27, \"div\");\n    i0.ɵɵelement(28, \"input\", 13);\n    i0.ɵɵelementStart(29, \"label\", 14);\n    i0.ɵɵtext(30, \"D\\u00E9pense\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"div\");\n    i0.ɵɵelement(32, \"input\", 15);\n    i0.ɵɵelementStart(33, \"label\", 16);\n    i0.ɵɵtext(34, \"Revenu\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"button\", 17);\n    i0.ɵɵtext(36, \"Ajouter\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"div\");\n    i0.ɵɵelementStart(38, \"button\", 18);\n    i0.ɵɵtext(39, \"Modifier\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"button\", 19);\n    i0.ɵɵtext(41, \"Supprimer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(42, \"input\", 20);\n    i0.ɵɵelement(43, \"mat-divider\");\n    i0.ɵɵelementStart(44, \"p\");\n    i0.ɵɵtext(45);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.registerForm);\n    i0.ɵɵadvance(35);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.add_BTN);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.edit_BTN);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.del_BTN);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"Solde : \", ctx_r1.solde, \"\\u20AC\");\n  }\n}\n\nexport let BankComponent = /*#__PURE__*/(() => {\n  class BankComponent {\n    constructor(modelBank, formBuilder, datepipe, changeDetectorRefs, route, snackbar) {\n      this.modelBank = modelBank;\n      this.formBuilder = formBuilder;\n      this.datepipe = datepipe;\n      this.changeDetectorRefs = changeDetectorRefs;\n      this.route = route;\n      this.snackbar = snackbar;\n      this.dataSource = [];\n      this.modelList = [];\n      this.add_BTN = false;\n      this.edit_BTN = true;\n      this.del_BTN = true;\n      this.id = \"\";\n      this.account = \"\";\n      this.solde = \"\";\n      this.isSubmitted = false;\n      this.tableLoading = false;\n      this.formLoading = false;\n    }\n\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.modelList = this.modelBank.getListBank()['listBank'];\n      let json_data = JSON.parse(localStorage.getItem('transacBank' + this.id) || '[]');\n      this.dataSource = json_data;\n      this.tableLoading = true;\n      let bank_data = JSON.parse(localStorage.getItem('bank') || '[]');\n      let index = bank_data.findIndex(i => i.id == this.id);\n      this.solde = bank_data[index].solde;\n      this.account = bank_data[index].nom;\n      this.registerForm = this.formBuilder.group({\n        info: ['', Validators.required],\n        prix: ['', Validators.required],\n        date: ['', Validators.required],\n        type: ['', Validators.required],\n        action: ['', Validators.required],\n        row: ['']\n      });\n      this.formLoading = true;\n      this.registerForm.patchValue({\n        action: '-',\n        tc: true\n      });\n    }\n\n    get f() {\n      return this.registerForm.controls;\n    } // Lors de l'envoi du formulaire\n\n\n    onSubmit(e) {\n      this.isSubmitted = true;\n      let json_data = JSON.parse(localStorage.getItem('transacBank' + this.id) || '[]');\n      let diff = 0; // Si bouton supprimer\n\n      if (e.submitter.value === \"Supprimer\") {\n        if (confirm(\"Etes vous sur de vouloir supprimer cette ligne ?\")) {\n          let index = json_data.findIndex(i => i.numero === JSON.parse(this.registerForm.controls['row'].value || '[]').numero);\n          diff = JSON.parse(this.registerForm.controls['row'].value || '[]').montant;\n\n          if (JSON.parse(this.registerForm.controls['row'].value || '[]').action == \"-\") {\n            diff = -diff;\n          }\n\n          json_data.splice(index, 1);\n          this.addData(json_data, diff);\n          this.showSnackBar(\"Données supprimées\");\n        } // Si formulaire invalide\n\n      } else if (this.registerForm.invalid) {\n        console.log('error', this.registerForm.invalid);\n      } else {\n        // Si bouton ajouter\n        if (e.submitter.value === \"Ajouter\") {\n          let newValue = {\n            numero: 1,\n            date: this.datepipe.transform(this.registerForm.controls['date'].value, 'dd-MM-yyyy'),\n            info: this.registerForm.controls['info'].value,\n            type: this.registerForm.controls['type'].value,\n            montant: this.registerForm.controls['prix'].value,\n            action: this.registerForm.controls['action'].value\n          };\n\n          if (json_data.length >= 1) {\n            newValue.numero = Number(json_data[json_data.length - 1].numero) + 1;\n          }\n\n          diff = this.registerForm.controls['prix'].value;\n\n          if (this.registerForm.controls['action'].value === \"+\") {\n            diff = -diff;\n          }\n\n          json_data.push(newValue);\n          this.showSnackBar(\"Données ajoutées\"); // Si bouton modifier\n        } else if (e.submitter.value === \"Modifier\") {\n          let index = json_data.findIndex(i => i.numero === JSON.parse(this.registerForm.controls['row'].value || '[]').numero);\n          let editValue = {\n            numero: JSON.parse(this.registerForm.controls['row'].value || '[]').numero,\n            date: this.datepipe.transform(this.registerForm.controls['date'].value, 'dd-MM-yyyy'),\n            info: this.registerForm.controls['info'].value,\n            type: this.registerForm.controls['type'].value,\n            montant: this.registerForm.controls['prix'].value,\n            action: this.registerForm.controls['action'].value\n          };\n          diff = this.registerForm.controls['prix'].value - JSON.parse(this.registerForm.controls['row'].value || '[]').montant;\n\n          if (JSON.parse(this.registerForm.controls['row'].value || '[]').action != this.registerForm.controls['action'].value) {\n            diff = JSON.parse(this.registerForm.controls['row'].value || '[]').montant + this.registerForm.controls['prix'].value;\n          }\n\n          if (this.registerForm.controls['action'].value === \"+\") {\n            diff = -diff;\n          }\n\n          json_data[index] = editValue;\n        }\n\n        this.addData(json_data, diff);\n        this.showSnackBar(\"Données modifiées\");\n      }\n    } // Réattribue les numéros et ajoute les données\n\n\n    addData(array, diff) {\n      for (let i = 0; i < array.length; i++) {\n        array[i].numero = i + 1;\n      }\n\n      localStorage.setItem('transacBank' + this.id, JSON.stringify(array)); // Met a jour le solde du compte\n\n      let bank_data = JSON.parse(localStorage.getItem('bank') || '[]');\n      let index = bank_data.findIndex(i => i.id == this.id);\n      bank_data[index] = {\n        id: this.id,\n        nom: this.account,\n        solde: this.solde = Math.round((this.solde - diff) * 100) / 100\n      };\n      localStorage.setItem('bank', JSON.stringify(bank_data));\n      this.refreshDisplay();\n    } // Rafraichi l'affichage de la table\n\n\n    refreshDisplay() {\n      this.isSubmitted = false;\n      this.formLoading = false;\n      this.tableLoading = false;\n      let json_data = JSON.parse(localStorage.getItem('transacBank' + this.id) || '[]');\n      this.dataSource = json_data;\n      this.changeDetectorRefs.detectChanges();\n      this.setButtonState(null);\n      this.tableLoading = true;\n      this.formLoading = true;\n    } // Modifie l'état des boutons, et les valeurs des input\n\n\n    setButtonState(row) {\n      if (row !== null) {\n        this.add_BTN = true;\n        this.edit_BTN = false;\n        this.del_BTN = false;\n        let date = row.date.replace(/(\\d{2})-(\\d{2})-(\\d{4})/, \"$2-$1-$3\");\n        this.registerForm.controls['date'].setValue(this.datepipe.transform(date, 'yyyy-MM-dd'));\n        this.registerForm.controls['info'].setValue(row.info);\n        this.registerForm.controls['type'].setValue(row.type);\n        this.registerForm.controls['prix'].setValue(row.montant);\n        this.registerForm.controls['row'].setValue(JSON.stringify(row));\n        this.registerForm.patchValue({\n          action: row.action,\n          tc: true\n        });\n      } else {\n        this.add_BTN = false;\n        this.edit_BTN = true;\n        this.del_BTN = true;\n        this.registerForm.reset();\n        this.registerForm.patchValue({\n          action: '-',\n          tc: true\n        });\n      }\n    }\n\n    showSnackBar(message) {\n      this.snackbar.open(message, 'Ok', {\n        duration: 4000\n      });\n    }\n\n  }\n\n  BankComponent.ɵfac = function BankComponent_Factory(t) {\n    return new (t || BankComponent)(i0.ɵɵdirectiveInject(i1.ModelListBank), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.DatePipe), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i5.MatSnackBar));\n  };\n\n  BankComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BankComponent,\n    selectors: [[\"app-bank\"]],\n    decls: 5,\n    vars: 3,\n    consts: [[\"id\", \"bankDisplay\"], [3, \"data\", \"tableColumn\", \"userSelection\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"data\", \"tableColumn\", \"userSelection\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"date\", \"formControlName\", \"date\", \"matInput\", \"\"], [\"type\", \"text\", \"formControlName\", \"info\", \"matInput\", \"\", \"placeholder\", \"Ex : Amazon\"], [\"formControlName\", \"type\"], [\"value\", \"Cartes\"], [\"value\", \"Ch\\u00E8ques\"], [\"value\", \"Esp\\u00E8ces\"], [\"type\", \"number\", \"formControlName\", \"prix\", \"matInput\", \"\", \"placeholder\", \"Ex : 10.95\"], [\"aria-label\", \"Select an option\"], [\"type\", \"radio\", \"id\", \"lessRadio\", \"value\", \"-\", \"formControlName\", \"action\"], [\"for\", \"lessRadio\"], [\"type\", \"radio\", \"id\", \"moreRadio\", \"value\", \"+\", \"formControlName\", \"action\"], [\"for\", \"moreRadio\"], [\"mat-flat-button\", \"\", \"type\", \"submit\", \"value\", \"Ajouter\", 3, \"disabled\"], [\"mat-flat-button\", \"\", \"type\", \"submit\", \"value\", \"Modifier\", 3, \"disabled\"], [\"mat-flat-button\", \"\", \"type\", \"submit\", \"value\", \"Supprimer\", 1, \"warningBtn\", 3, \"disabled\"], [\"type\", \"hidden\", \"formControlName\", \"row\"]],\n    template: function BankComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0);\n        i0.ɵɵtemplate(3, BankComponent_app_table_3_Template, 1, 2, \"app-table\", 1);\n        i0.ɵɵtemplate(4, BankComponent_form_4_Template, 46, 5, \"form\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.account);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.tableLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formLoading);\n      }\n    },\n    directives: [i3.NgIf, i6.TableComponent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i7.MatFormField, i7.MatLabel, i2.DefaultValueAccessor, i8.MatInput, i2.NgControlStatus, i2.FormControlName, i9.MatSelect, i10.MatOption, i2.NumberValueAccessor, i11.MatRadioGroup, i2.RadioControlValueAccessor, i12.MatButton, i13.MatDivider],\n    styles: [\"[_nghost-%COMP%]{width:100%}#bankDisplay[_ngcontent-%COMP%]{margin-top:20px;display:flex;gap:25px}app-table[_ngcontent-%COMP%]{width:80%}mat-radio-group[_ngcontent-%COMP%]{color:#000;display:flex;justify-content:space-around;margin-bottom:20px}form[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:10px;width:20%;background-color:#fafafa;border-radius:7px;padding:20px 10px 10px}form[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:flex;flex-direction:column}form[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#000;font-size:larger}button[_ngcontent-%COMP%]{background-color:#1976d2;color:#fff;width:100%;padding:4px 0;margin-bottom:10px}.warningBtn[_ngcontent-%COMP%]{background-color:red}mat-form-field[_ngcontent-%COMP%]{width:100%;color:#000}  .mat-simple-snackbar-action{color:#3089e2!important}@media (max-width: 767px){#bankDisplay[_ngcontent-%COMP%]{flex-direction:column-reverse;gap:20px}form[_ngcontent-%COMP%]{width:calc(100% - 20px)}form[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{flex-direction:row;gap:5px;width:100%;align-items:center}form[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{width:50%}mat-radio-group[_ngcontent-%COMP%], button[_ngcontent-%COMP%]{margin-bottom:0}app-table[_ngcontent-%COMP%]{width:100%;margin-bottom:6px}}\"]\n  });\n  return BankComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}